# Code is generated by ChatGPT
import json
import matplotlib.pyplot as plt

def read_log(log_file_path):
    # Open the log file for reading
    with open(log_file_path, "r") as file:
        # Read each line in the file
        lines = file.readlines()

    # Initialize empty lists to store the data
    test_acc1_list = []
    train_loss_list = []

    # Iterate over each line in the log file
    for line in lines:
        # Parse the line as JSON
        data = json.loads(line)

        # Extract the test_acc1 and train_loss values and append them to the lists
        test_acc1_list.append(data["test_acc1"])
        train_loss_list.append(data["train_loss"])

    # Return the lists of test_acc1 and train_loss values
    return train_loss_list, test_acc1_list

# Define the paths to your log files
log_file_paths = [
    "/home/zeyuan.yin/tmp/BN-ViT/log/deit_t_ln.log",
    "/home/zeyuan.yin/tmp/BN-ViT/log/deit_t_bn.log",
    "/home/zeyuan.yin/tmp/BN-ViT/log/deit_t_bn_ffnbn.log"
]

# Initialize empty lists to store the data from each log file
train_loss_list = []
test_acc1_list = []

# Read and store the data from each log file
for log_file_path in log_file_paths:
    train_loss, test_acc1 = read_log(log_file_path)
    train_loss_list.append(train_loss)
    test_acc1_list.append(test_acc1)

# Plot the lines
for i in range(len(log_file_paths)):
    plt.plot(train_loss_list[i], label="{}".format(log_file_paths[i].split('/')[-1].split('.')[0].upper()))
    # plt.plot(test_acc1_list[i], label="Test Acc1 - File {}".format(i+1))

# Set y-axis range
plt.ylim([0, 8])
plt.yticks([0, 2, 4, 6, 8])
plt.xlim([0, 300])
plt.tick_params(direction='in')
# Add labels and title
plt.xlabel("Epoch")
plt.ylabel("Train Loss")
# plt.title("Train Loss")
plt.grid(True)
# Add legend
plt.legend()

# Show the plot
# plt.show()
plt.savefig("plot_1.png")#, bbox_inches='tight')
plt.close()


for i in range(len(log_file_paths)):
    # plt.plot(train_loss_list[i], label="Train Loss - File {}".format(i+1))
    plt.plot(test_acc1_list[i], label="{}".format(log_file_paths[i].split('/')[-1].split('.')[0].upper()))

# Set y-axis range
plt.ylim([0, 100])
plt.yticks([0, 25,50,75,100])
plt.xlim([0, 300])
plt.tick_params(direction='in')
plt.xlabel("Epoch")
plt.ylabel("Test Acc1 (%)")
# plt.title("Test Acc1")
plt.grid(True)
# Add legend
plt.legend()

# Show the plot
# plt.show()
plt.savefig("plot_2.png")#,  bbox_inches='tight')
